name: Continuous Delivery

on:
  push:
    branches:
      - master

jobs:
  cd:
    name: Continuous Delivery
    runs-on: ubuntu-latest
    steps:
      - id: yarn-cache
        name: Get Yarn cache path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f
      - uses: actions/setup-node@56899e050abffc08c2b3b61f3ec6a79a9dc3223d
        with:
          node-version: 14.x
      - uses: actions/cache@1a9e2138d905efd099035b49d8b7a3888c653ca8
        name: Load Yarn cache
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install --ignore-scripts
        name: Install dependencies
      - run: yarn build
        name: Build web app

      # Continuous Delivery Pipeline --
      #- uses: dswistowski/surge-sh-action@341bcbd
      #  name: Publish to Surge
      #  with:
      #    domain: ${{ secrets.DEPLOYMENT_URL }}
      #    project: ./out
      #    login: ${{ secrets.SURGE_LOGIN }}
      #    token: ${{ secrets.SURGE_TOKEN }}
      - uses: 8398a7/action-slack@45986a1c69e93353648c176ce49eecddebebf64e
        name: Notify on Slack
        if: always() # Pick up events even if the job fails or is canceled.
        continue-on-error: true
        with:
          status: ${{ job.status }}
          author_name: Continuous Deployment
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
